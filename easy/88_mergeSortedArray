class Solution {
    public void merge(int[] nums1, int m, int[] nums2, int n) {
        if (nums1 == null || nums2 == null) return;
        int p1 = m-1;
        int p2 = n-1;
        for (int i = m+n-1; i >= 0; i--) {
            if (p1 >= 0 && p2 >= 0){
                if (nums1[p1] > nums2[p2]) {
                    nums1[i] = nums1[p1];
                    p1--;
                } else {
                    nums1[i] = nums2[p2];
                    p2--;
                }
            } else if (p1 >= 0) {
                nums1[i] = nums1[p1];
                p1--;
            } else {
                nums1[i] = nums2[p2];
                p2--;
            }
        }
    }
}

/*
   Fill the array backward because the front part can't be messed while tail part is blank space
   Special attention to handle the pointer overflow of p1 and p2
*/
