class Solution {
    public boolean isRectangleOverlap(int[] rec1, int[] rec2) {
        if (rec1 == null || rec2 == null) return false;
        // Not rectangle
        if (rec1[0] == rec1[2] || rec1[1] == rec1[3] || rec2[0] == rec2[2] || rec2[1] == rec2[3]) {
            return false;
        }
        // false condition
        if (rec1[0] >= rec2[2] || rec1[1] >= rec2[3] || rec1[2] <= rec2[0] || rec1[3] <= rec2[1]) {
            return false;
        }
        return true;
    }
}

class Solution {
    public boolean isRectangleOverlap(int[] rec1, int[] rec2) {
        if (rec1 == null || rec2 == null) return false;
        // Construct the overlap rectangle
        int[] rec = new int[4];
        rec[0] = Math.max(rec1[0], rec2[0]);
        rec[1] = Math.max(rec1[1], rec2[1]);
        rec[2] = Math.min(rec1[2], rec2[2]);
        rec[3] = Math.min(rec1[3], rec2[3]);
        return rec[0] < rec[2] && rec[1] < rec[3];
    }
}

/*
1. Check position of these points
    Need check the case where rectangle is a line or point
2**. Check the area of combined rectangle
   */
