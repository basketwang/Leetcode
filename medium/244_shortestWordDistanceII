class WordDistance {
    // Note: may have repeated word in the inputs
    HashMap<String, List<Integer>> map;
    public WordDistance(String[] wordsDict) {
        map = new HashMap<>();
        for (int i = 0; i < wordsDict.length; i++) {
            String word = wordsDict[i];
            if (!map.containsKey(word)) {
                map.put(word, new LinkedList<>());
            }
            map.get(word).add(i);
        }
    }
    
    public int shortest(String word1, String word2) {
       if (!map.containsKey(word1) || !map.containsKey(word2)) return -1;
        List<Integer> idx1s = map.get(word1);
        List<Integer> idx2s = map.get(word2);
        int min = Integer.MAX_VALUE;
        for (int idx1 : idx1s) {
           for (int idx2 : idx2s) {
               min = Math.min(min, Math.abs(idx1 - idx2));
           } 
        }
        return min;
    }
}

