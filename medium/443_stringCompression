class Solution {
    public int compress(char[] chars) {
        if (chars == null || chars.length == 0) return 0; 
        char c = chars[0];
        int num = 0;
        int idx = 0;
        
        for (int i = 0; i < chars.length; i++) {
            char current = chars[i];
            if (current == c) {
                num++;
            } else {
                chars[idx++] = c;
                if (num != 1) {
                    String n = String.valueOf(num);
                    for (int j = 0; j < n.length(); j++) {
                        chars[idx++] = n.charAt(j);
                    }
                num = 1;
                }
                c = current;
            }
        }
        chars[idx++] = c;
        if (num != 1) {
            String n = String.valueOf(num);
            for (int j = 0; j < n.length(); j++) {
                chars[idx++] = n.charAt(j);
            }
            num = 1;
        }
        return idx;
    }
}
/*
Only when find a different char, we update with previous value
*/
